/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import javax.swing.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.text.ParseException;
import javax.swing.text.MaskFormatter;
import java.time.format.DateTimeFormatter;
import models.Acesso;
import models.Catraca;
import models.Pessoa;
import models.Usuario;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;
/**
 *
 * @author ADMIN
 */
public class EdicaoAcesso extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    private SessionFactory sessionFactory;
    private Acesso acessoAtual;
    private GerenciarAcesso gerenciarAcesso;
    // Define um DateTimeFormatter para formatar a data ao carregar do banco de dados
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
    
    public EdicaoAcesso(GerenciarAcesso gerenciarAcesso) {
    
        initComponents();
        this.gerenciarAcesso = gerenciarAcesso;
        sessionFactory = new Configuration().configure("hibernate.cfg.xml").buildSessionFactory();
        carregarAcesso();
        carregarComboBoxes();
        // Aplica a máscara de formatação para o JFormattedTextField
        try {
            MaskFormatter dateFormatter = new MaskFormatter("##-##-#### ##:##");
            dateFormatter.setPlaceholderCharacter('_');
            dateFormatter.install(textFieldData); // Instala a máscara diretamente no textFieldData
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        painelHome = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        textFieldId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cancelarButton = new javax.swing.JButton();
        salvarButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        textFieldData = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        comboBoxCatraca = new javax.swing.JComboBox<>();
        comboBoxPessoa = new javax.swing.JComboBox<>();
        comboBoxUsuario = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Home"); // NOI18N
        setResizable(false);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        painelHome.setBackground(new java.awt.Color(255, 255, 255));
        painelHome.setForeground(new java.awt.Color(0, 0, 0));
        painelHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID:");
        painelHome.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        textFieldId.setEditable(false);
        textFieldId.setBackground(new java.awt.Color(255, 255, 255));
        textFieldId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textFieldId.setForeground(new java.awt.Color(0, 0, 0));
        textFieldId.setFocusable(false);
        painelHome.add(textFieldId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 40, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nome Catraca:");
        painelHome.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 150, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Nome Pessoa:");
        painelHome.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 150, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Nome Usuário:");
        painelHome.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 160, -1));

        cancelarButton.setBackground(new java.awt.Color(255, 51, 51));
        cancelarButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancelarButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelarButton.setText("CANCELAR");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });
        painelHome.add(cancelarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 130, 60));

        salvarButton.setBackground(new java.awt.Color(255, 51, 51));
        salvarButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        salvarButton.setForeground(new java.awt.Color(255, 255, 255));
        salvarButton.setText("SALVAR");
        salvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarButtonActionPerformed(evt);
            }
        });
        painelHome.add(salvarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 130, 60));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("D-M-A Horas:Mins (dd-MM-yyyy hh:mm)");
        painelHome.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 360, -1));

        textFieldData.setBackground(new java.awt.Color(255, 255, 255));
        textFieldData.setForeground(new java.awt.Color(0, 0, 0));
        textFieldData.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        painelHome.add(textFieldData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 480, 30));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Data do Acesso:");
        painelHome.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        comboBoxCatraca.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxCatraca.setForeground(new java.awt.Color(0, 0, 0));
        comboBoxCatraca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCatracaActionPerformed(evt);
            }
        });
        painelHome.add(comboBoxCatraca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 480, 30));

        comboBoxPessoa.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxPessoa.setForeground(new java.awt.Color(0, 0, 0));
        painelHome.add(comboBoxPessoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 480, 30));

        comboBoxUsuario.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxUsuario.setForeground(new java.awt.Color(0, 0, 0));
        painelHome.add(comboBoxUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 480, 30));

        jPanel3.add(painelHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void salvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarButtonActionPerformed
        salvarAlteracoes();
    }//GEN-LAST:event_salvarButtonActionPerformed

    private void comboBoxCatracaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCatracaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCatracaActionPerformed
    // Adicione o parâmetro no construtor
    
    public EdicaoAcesso(Acesso model) {
}
       
 
    /**
     * @param args the command line arguments\
     */
   public static void main(String args[]) {
    // Configuração do Look and Feel
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    }catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(EdicaoAcesso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

    // Criação da View e do Model
    
    Acesso model = new Acesso();

    // \Exibe a View
    
    }
   
  private void carregarAcesso() {
    try (BufferedReader reader = new BufferedReader(new FileReader("acessoToEdit.txt"))) {
        String linha = reader.readLine();
        int acessoId = Integer.parseInt(linha);

        Session session = sessionFactory.openSession();
        Transaction transaction = null;
        try {
            transaction = session.beginTransaction();

            Query<Acesso> query = session.createQuery("FROM Acesso WHERE id = :id", Acesso.class);
            query.setParameter("id", acessoId);
            acessoAtual = query.uniqueResult();

            if (acessoAtual != null) {
                textFieldId.setText(String.valueOf(acessoAtual.getId()));
                textFieldData.setText(acessoAtual.getDataAcesso().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))); // Use DateTimeFormatter para formatar a data

                // Preencher as combo boxes com os dados do acesso atual
                comboBoxCatraca.setSelectedItem(acessoAtual.getCatraca().getNome());
                comboBoxPessoa.setSelectedItem(acessoAtual.getPessoa().getNome());
                comboBoxUsuario.setSelectedItem(acessoAtual.getUsuario().getNome());
            } else {
                JOptionPane.showMessageDialog(this, "Acesso não encontrado.");
            }

            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) transaction.rollback();
            e.printStackTrace();
        } finally {
            session.close();
        }

        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar o ID do acesso.");
        }
    }

   // Método para carregar as combo boxes com dados do banco
    private void carregarComboBoxes() {
        try (Session session = sessionFactory.openSession()) {
            session.beginTransaction();

            // Carregar Catracas
            Query<Catraca> queryCatracas = session.createQuery("FROM Catraca", Catraca.class);
            for (Catraca catraca : queryCatracas.list()) {
                comboBoxCatraca.addItem(catraca.getNome()); // Supondo que Catraca tenha um método getNome()
            }

            // Carregar Pessoas
            Query<Pessoa> queryPessoas = session.createQuery("FROM Pessoa", Pessoa.class);
            for (Pessoa pessoa : queryPessoas.list()) {
                comboBoxPessoa.addItem(pessoa.getNome()); // Supondo que Pessoa tenha um método getNome()
            }

            // Carregar Usuários
            Query<Usuario> queryUsuarios = session.createQuery("FROM Usuario", Usuario.class);
            for (Usuario usuario : queryUsuarios.list()) {
                comboBoxUsuario.addItem(usuario.getNome()); // Supondo que Usuario tenha um método getNome()
            }

            session.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar os dados.");
        }
    }

   
    private void salvarAlteracoes() {
        Session session = sessionFactory.openSession();
        Transaction transaction = null;
        try {
            transaction = session.beginTransaction();

            // Atualizar o objeto Acesso
            acessoAtual.setDataAcesso(LocalDateTime.parse(textFieldData.getText(), DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm")));
            acessoAtual.setCatraca((Catraca) comboBoxCatraca.getSelectedItem()); // Certifique-se de que o item selecionado seja um objeto Catraca
            acessoAtual.setPessoa((Pessoa) comboBoxPessoa.getSelectedItem()); // Certifique-se de que o item selecionado seja um objeto Pessoa
            acessoAtual.setUsuario((Usuario) comboBoxUsuario.getSelectedItem()); // Certifique-se de que o item selecionado seja um objeto Usuario

            session.update(acessoAtual); // Atualiza no banco de dados

            transaction.commit();
            JOptionPane.showMessageDialog(this, "Acesso atualizado com sucesso.");
            gerenciarAcesso.atualizarTabela(); // Atualize a tabela na janela de gerenciamento após a edição
            dispose(); // Fecha a janela de edição

        } catch (Exception e) {
            if (transaction != null) transaction.rollback();
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao salvar as alterações.");
        } finally {
            session.close();
        }
    }

    @Override
    public void dispose() {
        super.dispose();
        if (sessionFactory != null) {
            sessionFactory.close();
        }
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarButton;
    private javax.swing.JComboBox<String> comboBoxCatraca;
    private javax.swing.JComboBox<String> comboBoxPessoa;
    private javax.swing.JComboBox<String> comboBoxUsuario;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel painelHome;
    private javax.swing.JButton salvarButton;
    private javax.swing.JFormattedTextField textFieldData;
    private javax.swing.JTextField textFieldId;
    // End of variables declaration//GEN-END:variables
}